name: Retrieve and Encrypt AWS Secrets
inputs:
  MODERNISATION_PLATFORM_ACCOUNT_NUMBER:
    description: MP Account Number
    required: true
  PASSPHRASE:
    description: secret to encrypt
    required: true
  
outputs:
  environment_management:
    description: Encrypted environment management secret
  pagerduty_token:
    description: Encrypted PagerDuty token
  pagerduty_userapi_token:
    description: Encrypted PagerDuty User API token
  slack_webhook_url:
    description: Encrypted Slack webhook URL
  github_ci_user_pat:
    description: Encrypted GitHub CI User PAT
runs:
  using: "composite"
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: "arn:aws:iam::${{ inputs.MODERNISATION_PLATFORM_ACCOUNT_NUMBER }}:role/github-actions" # Reference GitHub Secret
        role-session-name: githubactionsrolesession
        aws-region: "eu-west-2" # Replace with your region

    - name: Retrieve Secrets from AWS Secrets Manager
      uses: aws-actions/aws-secretsmanager-get-secrets@v2
      with:
        secret-ids: |
          MODERNISATION_PLATFORM_ENVIRONMENTS,environment_management
          PAGERDUTY_TOKEN,pagerduty_token
          PAGERDUTY_USERAPI_TOKEN,pagerduty_userapi_token
          SLACK_WEBHOOK_URL,slack_webhook_url
          TERRAFORM_GITHUB_TOKEN,github_ci_user_pat

    - name: Encrypt and Set Outputs
      id: encrypt-outputs
      shell: bash
      run: |
        environment_management=$(gpg --symmetric --batch --passphrase "${{ inputs.PASSPHRASE }}" --output - <(echo "$MODERNISATION_PLATFORM_ENVIRONMENTS") | base64 -w0)
        echo "::set-output name=environment_management::$environment_management"

        pagerduty_token=$(gpg --symmetric --batch --passphrase "${{ inputs.PASSPHRASE }}" --output - <(echo "$PAGERDUTY_TOKEN") | base64 -w0)
        echo "::set-output name=pagerduty_token::$pagerduty_token"

        pagerduty_userapi_token=$(gpg --symmetric --batch --passphrase "${{ inputs.PASSPHRASE }}" --output - <(echo "$PAGERDUTY_USERAPI_TOKEN") | base64 -w0)
        echo "::set-output name=pagerduty_userapi_token::$pagerduty_userapi_token"

        slack_webhook_url=$(gpg --symmetric --batch --passphrase "${{ inputs.PASSPHRASE }}" --output - <(echo "$SLACK_WEBHOOK_URL") | base64 -w0)
        echo "::set-output name=slack_webhook_url::$slack_webhook_url"

        github_ci_user_pat=$(gpg --symmetric --batch --passphrase "${{ inputs.PASSPHRASE }}" --output - <(echo "$TERRAFORM_GITHUB_TOKEN") | base64 -w0)
        echo "::set-output name=github_ci_user_pat::$github_ci_user_pat"

